{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\locker\\\\src\\\\components\\\\Select\\\\Select.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Select = ({\n  options,\n  onChange,\n  id,\n  name,\n  className,\n  placeholder,\n  register,\n  defaultValue\n}) => {\n  _s();\n  const [selectedValue, setSelectedValue] = useState(defaultValue || '');\n  useEffect(() => {\n    if (defaultValue) {\n      setSelectedValue(defaultValue);\n    }\n  }, [defaultValue]);\n  const handleChange = event => {\n    const value = event.target.value;\n    setSelectedValue(value);\n    onChange(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      id: id,\n      name: name,\n      value: selectedValue,\n      onChange: handleChange,\n      className: className,\n      ...(register ? register(name, {\n        required: true\n      }) : {}),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: placeholder || 'Select an option'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.id,\n        children: option.value\n      }, option.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Select, \"yc0+j+90o4wBt8SeL4yC1lxCG1k=\");\n_c = Select;\nexport default Select;\nvar _c;\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Select","options","onChange","id","name","className","placeholder","register","defaultValue","_s","selectedValue","setSelectedValue","handleChange","event","value","target","children","required","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","option","_c","$RefreshReg$"],"sources":["D:/Project/React/locker/src/components/Select/Select.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\ninterface Option {\r\n    id: number;\r\n    value: string;\r\n}\r\n\r\ninterface SelectProps {\r\n    options: Option[];\r\n    onChange: (value: string) => void;\r\n    id: string;\r\n    name: string;\r\n    className?: string;\r\n    placeholder?: string;\r\n    register?: any; // Assuming register is a function from a form library like react-hook-form\r\n    defaultValue?: any; // Add defaultValue prop\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({ options, onChange, id, name, className, placeholder, register, defaultValue }) => {\r\n    const [selectedValue, setSelectedValue] = useState<string>(defaultValue || '');\r\n\r\n    useEffect(() => {\r\n        if (defaultValue) {\r\n            setSelectedValue(defaultValue);\r\n        }\r\n    }, [defaultValue]);\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const value = event.target.value;\r\n        setSelectedValue(value);\r\n        onChange(value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <select\r\n                id={id}\r\n                name={name}\r\n                value={selectedValue}\r\n                onChange={handleChange}\r\n                className={className}\r\n                {...(register ? register(name, { required: true }) : {})}\r\n            >\r\n                <option value=\"\" disabled>{placeholder || 'Select an option'}</option>\r\n                {options.map(option => (\r\n                    <option key={option.id} value={option.id}>\r\n                        {option.value}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkBnD,MAAMC,MAA6B,GAAGA,CAAC;EAAEC,OAAO;EAAEC,QAAQ;EAAEC,EAAE;EAAEC,IAAI;EAAEC,SAAS;EAAEC,WAAW;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACvH,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAASY,YAAY,IAAI,EAAE,CAAC;EAE9EX,SAAS,CAAC,MAAM;IACZ,IAAIW,YAAY,EAAE;MACdG,gBAAgB,CAACH,YAAY,CAAC;IAClC;EACJ,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,MAAMI,YAAY,GAAIC,KAA2C,IAAK;IAClE,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAChCH,gBAAgB,CAACG,KAAK,CAAC;IACvBZ,QAAQ,CAACY,KAAK,CAAC;EACnB,CAAC;EAED,oBACIf,OAAA;IAAAiB,QAAA,eACIjB,OAAA;MACII,EAAE,EAAEA,EAAG;MACPC,IAAI,EAAEA,IAAK;MACXU,KAAK,EAAEJ,aAAc;MACrBR,QAAQ,EAAEU,YAAa;MACvBP,SAAS,EAAEA,SAAU;MAAA,IAChBE,QAAQ,GAAGA,QAAQ,CAACH,IAAI,EAAE;QAAEa,QAAQ,EAAE;MAAK,CAAC,CAAC,GAAG,CAAC,CAAC;MAAAD,QAAA,gBAEvDjB,OAAA;QAAQe,KAAK,EAAC,EAAE;QAACI,QAAQ;QAAAF,QAAA,EAAEV,WAAW,IAAI;MAAkB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,EACrErB,OAAO,CAACsB,GAAG,CAACC,MAAM,iBACfzB,OAAA;QAAwBe,KAAK,EAAEU,MAAM,CAACrB,EAAG;QAAAa,QAAA,EACpCQ,MAAM,CAACV;MAAK,GADJU,MAAM,CAACrB,EAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACb,EAAA,CAlCIT,MAA6B;AAAAyB,EAAA,GAA7BzB,MAA6B;AAoCnC,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}