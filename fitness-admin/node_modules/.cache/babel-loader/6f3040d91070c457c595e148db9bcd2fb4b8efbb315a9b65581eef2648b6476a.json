{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\myapp\\\\src\\\\Routes\\\\Index.tsx\";\nimport { Fragment, Suspense } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { authProtectedRoutes, publicRoutes } from \"./AllRoutes\";\nimport Loader from \"../components/Loader/Loader\";\nimport { AuthProtected } from \"./AuthProtected\";\nimport Layout from \"../components/Layout/Layout\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Index = () => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [publicRoutes.map((route, idx) => /*#__PURE__*/_jsxDEV(Route, {\n        path: route.path,\n        element: /*#__PURE__*/_jsxDEV(Suspense, {\n          children: route.component\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 29\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this)), authProtectedRoutes.map((route, idx) => /*#__PURE__*/_jsxDEV(Route, {\n        path: route.path,\n        element: /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Loader, {\n              show: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 51\n            }, this)\n          }, void 0, false),\n          children: /*#__PURE__*/_jsxDEV(AuthProtected, {\n            children: /*#__PURE__*/_jsxDEV(Layout, {\n              component: route.component\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["Fragment","Suspense","Routes","Route","authProtectedRoutes","publicRoutes","Loader","AuthProtected","Layout","jsxDEV","_jsxDEV","_Fragment","Index","children","map","route","idx","path","element","component","fileName","_jsxFileName","lineNumber","columnNumber","fallback","show","_c","$RefreshReg$"],"sources":["D:/Project/React/myapp/src/Routes/Index.tsx"],"sourcesContent":["import { Fragment, Suspense } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport { authProtectedRoutes, publicRoutes } from \"./AllRoutes\";\r\nimport Loader from \"../components/Loader/Loader\";\r\nimport { AuthProtected } from \"./AuthProtected\";\r\nimport Layout from \"../components/Layout/Layout\";\r\n\r\nconst Index = () => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <Routes>\r\n                {/* HERE WE DEFINE ALL PUBLIC ROUTES */}\r\n                {publicRoutes.map((route, idx) => (\r\n                    <Route\r\n                        path={route.path}\r\n                        element={\r\n                            <Suspense>\r\n                                {route.component}\r\n                            </Suspense>\r\n                        }\r\n                        key={idx}\r\n                    />\r\n                ))}\r\n\r\n                {authProtectedRoutes.map((route, idx) => (\r\n                    <Route\r\n                        path={route.path}\r\n                        element={\r\n                            <Suspense fallback={<><Loader show={true} /></>}>\r\n                                <AuthProtected >\r\n                                    <Layout component={route.component} />\r\n                                </AuthProtected>\r\n                            </Suspense>\r\n                        }\r\n                        key={idx}\r\n                    // exact={true}\r\n                    >\r\n                    </Route>\r\n                ))}\r\n            </Routes>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Index;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AAC1C,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,SAASC,mBAAmB,EAAEC,YAAY,QAAQ,aAAa;AAC/D,OAAOC,MAAM,MAAM,6BAA6B;AAChD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,MAAM,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAV,QAAA,IAAAW,SAAA;AAEjD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAEhB,oBACIF,OAAA,CAACV,QAAQ;IAAAa,QAAA,eACLH,OAAA,CAACR,MAAM;MAAAW,QAAA,GAEFR,YAAY,CAACS,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBACzBN,OAAA,CAACP,KAAK;QACFc,IAAI,EAAEF,KAAK,CAACE,IAAK;QACjBC,OAAO,eACHR,OAAA,CAACT,QAAQ;UAAAY,QAAA,EACJE,KAAK,CAACI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MACb,GACIP,GAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CACJ,CAAC,EAEDnB,mBAAmB,CAACU,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBAChCN,OAAA,CAACP,KAAK;QACFc,IAAI,EAAEF,KAAK,CAACE,IAAK;QACjBC,OAAO,eACHR,OAAA,CAACT,QAAQ;UAACuB,QAAQ,eAAEd,OAAA,CAAAC,SAAA;YAAAE,QAAA,eAAEH,OAAA,CAACJ,MAAM;cAACmB,IAAI,EAAE;YAAK;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC,gBAAE,CAAE;UAAAV,QAAA,eAC5CH,OAAA,CAACH,aAAa;YAAAM,QAAA,eACVH,OAAA,CAACF,MAAM;cAACW,SAAS,EAAEJ,KAAK,CAACI;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MACb,GACIP,GAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGL,CACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEnB,CAAC;AAAAG,EAAA,GApCKd,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}