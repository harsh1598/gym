{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\locker\\\\src\\\\components\\\\Table\\\\Table.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = props => {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table table-hover align-middle mb-0 border-0\",\n    children: [props.Header && /*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [props.Checkbox && /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          className: \"border-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"checkbox\",\n              id: \"checkAll\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), props.HeaderList.map((col, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          className: \"border-0 fw-semibold\",\n          children: col.title\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: props.rows.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [props.Checkbox && /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"border-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"checkbox\",\n              id: `checkbox-${rowIndex}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), row.data.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"border-0\",\n          children: cell.value\n        }, cellIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this))]\n      }, rowIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Table","props","className","children","Header","Checkbox","scope","type","id","fileName","_jsxFileName","lineNumber","columnNumber","HeaderList","map","col","i","title","rows","row","rowIndex","data","cell","cellIndex","value","_c","$RefreshReg$"],"sources":["D:/Project/React/locker/src/components/Table/Table.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nexport interface Column {\r\n  title: string;\r\n  id?: string;\r\n}\r\n\r\nexport interface Cell {\r\n  value: React.ReactNode;\r\n}\r\n\r\nexport interface Row {\r\n  data: Cell[];\r\n}\r\n\r\ninterface propData {\r\n  Header: boolean;\r\n  HeaderList: Column[];\r\n  Checkbox: boolean;\r\n  rows: Row[];\r\n}\r\n\r\nconst Table = (props: propData) => {\r\n  return (\r\n    <table className=\"table table-hover align-middle mb-0 border-0\">\r\n      {props.Header && (\r\n        <thead className=\"bg-light\">\r\n          <tr>\r\n            {props.Checkbox && (\r\n              <th scope=\"col\" className=\"border-0\">\r\n                <div className=\"form-check\">\r\n                  <input className=\"form-check-input\" type=\"checkbox\" id=\"checkAll\" />\r\n                </div>\r\n              </th>\r\n            )}\r\n            {props.HeaderList.map((col, i) => (\r\n              <th scope=\"col\" key={i} className=\"border-0 fw-semibold\">\r\n                {col.title}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n      )}\r\n      <tbody>\r\n        {props.rows.map((row, rowIndex) => (\r\n          <tr key={rowIndex}>\r\n            {props.Checkbox && (\r\n              <td className=\"border-0\">\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    id={`checkbox-${rowIndex}`}\r\n                  />\r\n                </div>\r\n              </td>\r\n            )}\r\n            {row.data.map((cell, cellIndex) => (\r\n              <td key={cellIndex} className=\"border-0\">\r\n                {cell.value}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAsB1B,MAAMC,KAAK,GAAIC,KAAe,IAAK;EACjC,oBACEF,OAAA;IAAOG,SAAS,EAAC,8CAA8C;IAAAC,QAAA,GAC5DF,KAAK,CAACG,MAAM,iBACXL,OAAA;MAAOG,SAAS,EAAC,UAAU;MAAAC,QAAA,eACzBJ,OAAA;QAAAI,QAAA,GACGF,KAAK,CAACI,QAAQ,iBACbN,OAAA;UAAIO,KAAK,EAAC,KAAK;UAACJ,SAAS,EAAC,UAAU;UAAAC,QAAA,eAClCJ,OAAA;YAAKG,SAAS,EAAC,YAAY;YAAAC,QAAA,eACzBJ,OAAA;cAAOG,SAAS,EAAC,kBAAkB;cAACK,IAAI,EAAC,UAAU;cAACC,EAAE,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACL,EACAX,KAAK,CAACY,UAAU,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBAC3BjB,OAAA;UAAIO,KAAK,EAAC,KAAK;UAASJ,SAAS,EAAC,sBAAsB;UAAAC,QAAA,EACrDY,GAAG,CAACE;QAAK,GADSD,CAAC;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAElB,CACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACR,eACDb,OAAA;MAAAI,QAAA,EACGF,KAAK,CAACiB,IAAI,CAACJ,GAAG,CAAC,CAACK,GAAG,EAAEC,QAAQ,kBAC5BrB,OAAA;QAAAI,QAAA,GACGF,KAAK,CAACI,QAAQ,iBACbN,OAAA;UAAIG,SAAS,EAAC,UAAU;UAAAC,QAAA,eACtBJ,OAAA;YAAKG,SAAS,EAAC,YAAY;YAAAC,QAAA,eACzBJ,OAAA;cACEG,SAAS,EAAC,kBAAkB;cAC5BK,IAAI,EAAC,UAAU;cACfC,EAAE,EAAE,YAAYY,QAAQ;YAAG;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACL,EACAO,GAAG,CAACE,IAAI,CAACP,GAAG,CAAC,CAACQ,IAAI,EAAEC,SAAS,kBAC5BxB,OAAA;UAAoBG,SAAS,EAAC,UAAU;UAAAC,QAAA,EACrCmB,IAAI,CAACE;QAAK,GADJD,SAAS;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEd,CACL,CAAC;MAAA,GAhBKQ,QAAQ;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACa,EAAA,GA7CIzB,KAAK;AA+CX,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}