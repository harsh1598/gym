{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\myapp\\\\src\\\\components\\\\Layout\\\\Layout.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Sidebar from '../Sidebar/Sidebar';\nimport Header from '../Header/Header';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Layout = props => {\n  _s();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  const currentPath = window.location.pathname;\n  useEffect(() => {\n    setIsSidebarOpen(false);\n  }, [currentPath]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"html\", {\n      lang: \"en\",\n      \"data-layout\": \"vertical\",\n      \"data-topbar\": \"light\",\n      \"data-sidebar\": \"dark\",\n      \"data-sidebar-size\": isSidebarOpen ? 'lg' : 'sm',\n      \"data-sidebar-image\": \"none\",\n      \"data-preloader\": \"disable\",\n      children: /*#__PURE__*/_jsxDEV(\"body\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"layout-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            toggleSidebar: toggleSidebar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n            isOpen: isSidebarOpen,\n            toggleSidebar: toggleSidebar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Layout, \"9L0iMvlxgzpFN/wVDxp74SfSydw=\");\n_c = Layout;\nexport default Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["React","useEffect","useState","Sidebar","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","Layout","props","_s","isSidebarOpen","setIsSidebarOpen","toggleSidebar","currentPath","window","location","pathname","children","lang","id","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","_c","$RefreshReg$"],"sources":["D:/Project/React/myapp/src/components/Layout/Layout.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport Header from '../Header/Header';\r\nimport Footer from '../Footer/Footer';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Layout = (props: any) => {\r\n    const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n\r\n    const toggleSidebar = () => {\r\n        setIsSidebarOpen(!isSidebarOpen);\r\n    };\r\n    const currentPath = window.location.pathname;\r\n\r\n    useEffect(() => {\r\n        setIsSidebarOpen(false);\r\n    }, [currentPath]);\r\n\r\n    return (\r\n        <>\r\n            {/* <div className={`g-sidenav-show bg-gray-100  ${isSidebarOpen ? 'g-sidenav-pinned' : ''}`} >\r\n                <Sidebar isOpen={isSidebarOpen} toggleSidebar={toggleSidebar} />\r\n                <main className=\"main-content position-relative max-height-vh-100 h-100 border-radius-lg \">\r\n                    <Header toggleSidebar={toggleSidebar} />\r\n                    <div className=\"container-fluid py-4\">\r\n                        {props.component}\r\n                        <Footer />\r\n                    </div>\r\n                </main>\r\n            </div> */}\r\n            <html lang=\"en\" data-layout=\"vertical\" data-topbar=\"light\" data-sidebar=\"dark\" data-sidebar-size={isSidebarOpen ? 'lg' : 'sm'} data-sidebar-image=\"none\" data-preloader=\"disable\">\r\n                <body>\r\n                    <div id=\"layout-wrapper\">\r\n                        <Header toggleSidebar={toggleSidebar} />\r\n                        <Sidebar isOpen={isSidebarOpen} toggleSidebar={toggleSidebar} />\r\n                    </div>\r\n                </body>\r\n            </html>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAQtC,MAAMC,MAAM,GAAIC,KAAU,IAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMY,aAAa,GAAGA,CAAA,KAAM;IACxBD,gBAAgB,CAAC,CAACD,aAAa,CAAC;EACpC,CAAC;EACD,MAAMG,WAAW,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ;EAE5CjB,SAAS,CAAC,MAAM;IACZY,gBAAgB,CAAC,KAAK,CAAC;EAC3B,CAAC,EAAE,CAACE,WAAW,CAAC,CAAC;EAEjB,oBACIT,OAAA,CAAAE,SAAA;IAAAW,QAAA,eAWIb,OAAA;MAAMc,IAAI,EAAC,IAAI;MAAC,eAAY,UAAU;MAAC,eAAY,OAAO;MAAC,gBAAa,MAAM;MAAC,qBAAmBR,aAAa,GAAG,IAAI,GAAG,IAAK;MAAC,sBAAmB,MAAM;MAAC,kBAAe,SAAS;MAAAO,QAAA,eAC7Kb,OAAA;QAAAa,QAAA,eACIb,OAAA;UAAKe,EAAE,EAAC,gBAAgB;UAAAF,QAAA,gBACpBb,OAAA,CAACF,MAAM;YAACU,aAAa,EAAEA;UAAc;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxCnB,OAAA,CAACH,OAAO;YAACuB,MAAM,EAAEd,aAAc;YAACE,aAAa,EAAEA;UAAc;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACT,CAAC;AAEX,CAAC;AAACd,EAAA,CAlCIF,MAAM;AAAAkB,EAAA,GAANlB,MAAM;AAoCZ,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}