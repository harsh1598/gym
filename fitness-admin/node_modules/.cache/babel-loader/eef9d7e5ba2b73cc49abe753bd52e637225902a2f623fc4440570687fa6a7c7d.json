{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\locker\\\\src\\\\components\\\\Sidebar\\\\Sidebar.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = props => {\n  _s();\n  const [currentRoute, setCurrentRoute] = useState('Dashboard');\n  useEffect(() => {\n    const currentPath = window.location.pathname;\n    const lastSegment = currentPath.split('/').filter(Boolean).pop();\n    switch (lastSegment) {\n      case \"user\":\n        setCurrentRoute('User');\n        break;\n      case \"product\":\n        setCurrentRoute('Product');\n        break;\n      case \"setting\":\n        setCurrentRoute('Setting');\n        break;\n      case \"dashboard\":\n        setCurrentRoute('Dashboard');\n        break;\n      default:\n        setCurrentRoute('Dashboard');\n    }\n  }, [currentRoute]);\n  return /*#__PURE__*/_jsxDEV(Offcanvas, {\n    show: show,\n    onHide: onClose,\n    responsive: \"xl\",\n    className: \"bg-dark text-white\",\n    children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n        children: \"Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        className: \"flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/dashboard\",\n            className: \"nav-link text-white\",\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/user\",\n            className: \"nav-link text-white\",\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Sidebar, \"gFYoNaNSOHrcSfODSnfgZu6x7uY=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useEffect","useState","Link","jsxDEV","_jsxDEV","Sidebar","props","_s","currentRoute","setCurrentRoute","currentPath","window","location","pathname","lastSegment","split","filter","Boolean","pop","Offcanvas","show","onHide","onClose","responsive","className","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Nav","Item","to","_c","$RefreshReg$"],"sources":["D:/Project/React/locker/src/components/Sidebar/Sidebar.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport logosm from \"../../assets/images/Lock.png\";\r\nimport logodark from \"../../assets/images/logo-dark.png\";\r\nimport logolight from \"../../assets/images/Locker.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface SidebarProps {\r\n    isOpen: boolean,\r\n    toggleSidebar: any\r\n}\r\n\r\nconst Sidebar = (props: SidebarProps) => {\r\n\r\n    const [currentRoute, setCurrentRoute] = useState('Dashboard');\r\n\r\n    useEffect(() => {\r\n        const currentPath = window.location.pathname;\r\n        const lastSegment = currentPath.split('/').filter(Boolean).pop();\r\n        switch (lastSegment) {\r\n            case \"user\":\r\n                setCurrentRoute('User');\r\n                break;\r\n            case \"product\":\r\n                setCurrentRoute('Product');\r\n                break;\r\n            case \"setting\":\r\n                setCurrentRoute('Setting');\r\n                break;\r\n            case \"dashboard\":\r\n                setCurrentRoute('Dashboard');\r\n                break;\r\n            default:\r\n                setCurrentRoute('Dashboard');\r\n        }\r\n    }, [currentRoute]);\r\n\r\n    return (\r\n        <Offcanvas\r\n            show={show}\r\n            onHide={onClose}\r\n            responsive=\"xl\"\r\n            className=\"bg-dark text-white\"\r\n        >\r\n            <Offcanvas.Header closeButton>\r\n                <Offcanvas.Title>Menu</Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body>\r\n                <Nav className=\"flex-column\">\r\n                    <Nav.Item>\r\n                        <Link to=\"/dashboard\" className=\"nav-link text-white\">\r\n                            Dashboard\r\n                        </Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Link to=\"/user\" className=\"nav-link text-white\">\r\n                            User\r\n                        </Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </Offcanvas.Body>\r\n        </Offcanvas>\r\n    );\r\n}\r\n\r\nexport default Sidebar;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAI3C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOxC,MAAMC,OAAO,GAAIC,KAAmB,IAAK;EAAAC,EAAA;EAErC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,WAAW,CAAC;EAE7DD,SAAS,CAAC,MAAM;IACZ,MAAMU,WAAW,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ;IAC5C,MAAMC,WAAW,GAAGJ,WAAW,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,CAACC,GAAG,CAAC,CAAC;IAChE,QAAQJ,WAAW;MACf,KAAK,MAAM;QACPL,eAAe,CAAC,MAAM,CAAC;QACvB;MACJ,KAAK,SAAS;QACVA,eAAe,CAAC,SAAS,CAAC;QAC1B;MACJ,KAAK,SAAS;QACVA,eAAe,CAAC,SAAS,CAAC;QAC1B;MACJ,KAAK,WAAW;QACZA,eAAe,CAAC,WAAW,CAAC;QAC5B;MACJ;QACIA,eAAe,CAAC,WAAW,CAAC;IACpC;EACJ,CAAC,EAAE,CAACD,YAAY,CAAC,CAAC;EAElB,oBACIJ,OAAA,CAACe,SAAS;IACNC,IAAI,EAAEA,IAAK;IACXC,MAAM,EAAEC,OAAQ;IAChBC,UAAU,EAAC,IAAI;IACfC,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAE9BrB,OAAA,CAACe,SAAS,CAACO,MAAM;MAACC,WAAW;MAAAF,QAAA,eACzBrB,OAAA,CAACe,SAAS,CAACS,KAAK;QAAAH,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACnB5B,OAAA,CAACe,SAAS,CAACc,IAAI;MAAAR,QAAA,eACXrB,OAAA,CAAC8B,GAAG;QAACV,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBrB,OAAA,CAAC8B,GAAG,CAACC,IAAI;UAAAV,QAAA,eACLrB,OAAA,CAACF,IAAI;YAACkC,EAAE,EAAC,YAAY;YAACZ,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EAAC;UAEtD;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACX5B,OAAA,CAAC8B,GAAG,CAACC,IAAI;UAAAV,QAAA,eACLrB,OAAA,CAACF,IAAI;YAACkC,EAAE,EAAC,OAAO;YAACZ,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EAAC;UAEjD;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEpB,CAAC;AAAAzB,EAAA,CAnDKF,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AAqDb,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}