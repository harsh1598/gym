{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\myapp\\\\src\\\\pages\\\\User\\\\Userlist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport WebService from \"../../utility/WebService\";\nimport Search from \"../../components/Search/Search\";\nimport toast from \"react-hot-toast\";\nimport { limit } from \"../../components/common/list\";\nimport Breadcrumb from \"../../components/Breadcrumb/Breadcrumb\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Userlist = () => {\n  _s();\n  const [modelName, setModelName] = useState({\n    name: \"\",\n    id: 0\n  });\n  const [list, setlist] = useState([]);\n  const [count, setCount] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [filter, setFilter] = useState({\n    sortBy: \"first_name\",\n    orderBy: \"asc\"\n  });\n  const handlePageChange = page => {\n    setCurrentPage(page);\n    getList(page, keyword);\n    // Load data for the selected page\n  };\n  const [keyword, setKeyword] = useState(\"\");\n  useEffect(() => {\n    getList(1, keyword);\n  }, [keyword]);\n  const onCloseModal = () => {\n    setModelName(\"\");\n  };\n  const changeStatus = id => {\n    let obj = {};\n    obj.id = id;\n    WebService.putAPI({\n      action: \"/update-user-status\",\n      body: obj\n    }).then(res => {\n      if (res && res.message) {\n        toast.success(res.message);\n        getList(1, keyword);\n        setModelName(\"\");\n      }\n    }).catch(error => {\n      // toast.error(error);\n      //   setLoading(false);\n    });\n  };\n  const handleSort = field => {\n    if (filter.sortBy === field) {\n      setFilter({\n        ...filter,\n        orderBy: filter.orderBy === \"asc\" ? \"desc\" : \"asc\"\n      });\n    } else {\n      setFilter({\n        ...filter,\n        sortBy: field\n      });\n      setFilter({\n        ...filter,\n        orderBy: \"asc\"\n      });\n    }\n    getList(1, keyword);\n  };\n  const getList = (page, keyword) => {\n    let obj = {};\n    obj.offset = page - 1;\n    obj.keyword = keyword;\n    obj.limit = limit;\n    obj.order_by = filter.orderBy;\n    obj.sort_by = filter.sortBy;\n    WebService.getAPI({\n      action: \"/user-list\",\n      body: obj\n    }).then(res => {\n      if (res && res.list) {\n        setlist(res.list);\n        // setLoader(true);\n        setCount(res.count);\n      }\n    }).catch(error => {\n      // toast.error(error);\n      //   setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxDEV(Breadcrumb, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header align-items-center d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-md-4 mb-2 mb-md-0\",\n            children: /*#__PURE__*/_jsxDEV(Search, {\n              keyword: keyword,\n              setKeyword: setKeyword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-md-8 d-grid d-md-flex justify-content-md-end\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-light\",\n              onClick: () => {\n                setModelName({\n                  name: \"AddEditUser\",\n                  id: 0\n                });\n              },\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(Userlist, \"7KtqOtIP0K1vMBoGe41gYAaDS74=\");\n_c = Userlist;\nexport default Userlist;\nvar _c;\n$RefreshReg$(_c, \"Userlist\");","map":{"version":3,"names":["React","useEffect","useState","WebService","Search","toast","limit","Breadcrumb","jsxDEV","_jsxDEV","Userlist","_s","modelName","setModelName","name","id","list","setlist","count","setCount","currentPage","setCurrentPage","filter","setFilter","sortBy","orderBy","handlePageChange","page","getList","keyword","setKeyword","onCloseModal","changeStatus","obj","putAPI","action","body","then","res","message","success","catch","error","handleSort","field","offset","order_by","sort_by","getAPI","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Project/React/myapp/src/pages/User/Userlist.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AddEditUser from \"./AddEditUser\";\r\nimport Pagination from \"../../components/Paginaion/Pagination\";\r\nimport { Modal, ModalFooter, ModalHeader } from \"reactstrap\";\r\nimport WebService from \"../../utility/WebService\";\r\nimport tim from \"../../assets/img/tim.png\";\r\nimport Search from \"../../components/Search/Search\";\r\nimport toast from \"react-hot-toast\";\r\nimport { limit } from \"../../components/common/list\";\r\nimport Breadcrumb from \"../../components/Breadcrumb/Breadcrumb\";\r\n\r\nconst Userlist = () => {\r\n\r\n    const [modelName, setModelName] = useState<any>({ name: \"\", id: 0 });\r\n    const [list, setlist] = useState<any>([]);\r\n    const [count, setCount] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [filter, setFilter] = useState({ sortBy: \"first_name\", orderBy: \"asc\" });\r\n\r\n    const handlePageChange = (page: number) => {\r\n        setCurrentPage(page);\r\n        getList(page, keyword);\r\n        // Load data for the selected page\r\n    };\r\n    const [keyword, setKeyword] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        getList(1, keyword);\r\n    }, [keyword])\r\n\r\n    const onCloseModal = () => {\r\n        setModelName(\"\");\r\n    }\r\n\r\n    const changeStatus = (id: any) => {\r\n        let obj: any = {};\r\n        obj.id = id;\r\n        WebService.putAPI({\r\n            action: \"/update-user-status\",\r\n            body: obj\r\n        })\r\n            .then((res: any) => {\r\n                if (res && res.message) {\r\n                    toast.success(res.message);\r\n                    getList(1, keyword);\r\n                    setModelName(\"\");\r\n                }\r\n            })\r\n            .catch((error: any) => {\r\n                // toast.error(error);\r\n                //   setLoading(false);\r\n            });\r\n    }\r\n\r\n    const handleSort = (field: any) => {\r\n        if (filter.sortBy === field) {\r\n            setFilter({ ...filter, orderBy: filter.orderBy === \"asc\" ? \"desc\" : \"asc\" });\r\n        } else {\r\n            setFilter({ ...filter, sortBy: field });\r\n            setFilter({ ...filter, orderBy: \"asc\" });\r\n        }\r\n        getList(1, keyword);\r\n    }\r\n\r\n    const getList = (page?: any, keyword?: any) => {\r\n        let obj: any = {};\r\n        obj.offset = page - 1;\r\n        obj.keyword = keyword;\r\n        obj.limit = limit;\r\n        obj.order_by = filter.orderBy;\r\n        obj.sort_by = filter.sortBy;\r\n        WebService.getAPI({\r\n            action: \"/user-list\",\r\n            body: obj\r\n        })\r\n            .then((res: any) => {\r\n                if (res && res.list) {\r\n                    setlist(res.list);\r\n                    // setLoader(true);\r\n                    setCount(res.count);\r\n                }\r\n            })\r\n            .catch((error: any) => {\r\n                // toast.error(error);\r\n                //   setLoading(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <Breadcrumb />\r\n            </div>\r\n            <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header align-items-center d-flex\">\r\n                        <div className=\"col-12 col-md-4 mb-2 mb-md-0\">\r\n                            <Search keyword={keyword} setKeyword={setKeyword} />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-8 d-grid d-md-flex justify-content-md-end\">\r\n                            <button className=\"btn btn-light\" onClick={() => { setModelName({ name: \"AddEditUser\", id: 0 }) }}>Add</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Userlist;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}